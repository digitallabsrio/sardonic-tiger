{
  "course_name": "Decode the Coding Interview in Elixir: Real-World Examples - Learn Interactively",
  "course_overview": "Preparing for coding interviews has become a daunting task. Trying to solve enough practice questions and remember solutions can feel impossible.\n\nFortunately, the best way to be successful in the coding interview is not to just grind through problems. The best way is to develop the skills to break down a new problem and deploy the right tools to come up with a solution.\n\nThat’s why in this course, you’ll prepare for coding interviews by tackling real world problems faced by tech companies. When you solve real problems related to real projects (for example, paginating attendees in a Zoom call), not only will you have more fun preparing, but you’ll also have an easier time remembering what you’ve learned.\n\nAfter each project, we’ll also show you what kinds of interview problems you’ll now be able to solve using the techniques you just applied, so that your knowledge is adaptable to new problems.\n\n(This course is also available in Rust, Java, C++, C#, Go, Python, Ruby, Scala, Swift, Kotlin, and JavaScript.)",
  "course_folder": "decode the coding interview in elixir real world examples",
  "course_lessons": [
    "0-course overview",
    "1-who should take this course",
    "2-project description for netflix",
    "3-feature 1 group similar titles",
    "4-feature 2 fetch top movies",
    "5-feature 3 find median age",
    "6-feature 4 popularity analysis",
    "7-feature 5 fetch most recently watched titles",
    "8-feature 6 fetch most frequently watched titles",
    "9-feature 7 browse ratings",
    "10-feature 8 verify user session",
    "11-feature 9 movie combinations of a genre",
    "12-feature 10 calculate median of buffering events",
    "13-feature 11 generate movie viewing orders",
    "14-feature 12 maintain continue watching bar",
    "15-what did we learn",
    "16-diy group anagrams",
    "17-diy merge k sorted lists",
    "18-diy find median from a data stream",
    "19-diy monotonic array",
    "20-diy lru cache",
    "21-diy lfu cache",
    "22-diy min stack",
    "23-diy validate stack sequences",
    "24-diy letter combinations of a phone number",
    "25-diy sliding window median",
    "26-diy permutations",
    "27-diy maximum frequency stack",
    "28-project description for facebook",
    "29-feature 1 friend circles",
    "30-feature 2 copy connections",
    "31-feature 3 find story id",
    "32-feature 4 request limiter",
    "33-feature 5 flag words",
    "34-feature 6 combine similar messages",
    "35-feature 7 divide posts",
    "36-feature 8 overlapping topics",
    "37-feature 9 recreating the decision tree",
    "38-what did we learn",
    "39-diy number of islands",
    "40-diy number of provinces",
    "41-diy number of connected components in an undirected graph",
    "42-diy clone undirected graph",
    "43-diy search in rotated sorted array",
    "44-diy logger rate limiter",
    "45-diy expressive words",
    "46-diy group shifted strings",
    "47-diy divide chocolate",
    "48-diy minimum window substring",
    "49-diy construct a binary tree from preorder and inorder traversal",
    "50-project description for search engine",
    "51-feature 1 store and fetch words",
    "52-feature 2 design search autocomplete system",
    "53-feature 3 add white spaces to create words",
    "54-feature 4 suggest possible queries after adding white spaces",
    "55-feature 5 calculate the search ranking factor",
    "56-feature 6 reorganizing search results",
    "57-feature 7 find searching time",
    "58-feature 8 distributed process coordinator",
    "59-feature 9 finding minimum servers",
    "60-what did we learn",
    "61-diy implement trie",
    "62-diy suggest relevant sentences",
    "63-diy word break",
    "64-diy word break ii",
    "65-diy product of array elements except itself",
    "66-diy reorganizing a string",
    "67-diy exclusive time of functions",
    "68-diy snapshot array",
    "69-diy coin change",
    "70-diy coin change 2",
    "71-diy combination sum",
    "72-project description for google calendar",
    "73-feature 1 find meeting rooms",
    "74-feature 2 show busy schedule",
    "75-feature 3 check if meeting is possible",
    "76-feature 4 schedule a new meeting",
    "77-feature 5 find common meeting times",
    "78-feature 6 find two sets of consecutive days",
    "79-feature 7 longest busy period",
    "80-what did we learn",
    "81-diy find interval sets",
    "82-diy merge intervals",
    "83-diy my calendar",
    "84-diy insert interval",
    "85-diy interval lists intersection",
    "86-diy employee free time",
    "87-diy find two non overlapping subarrays each with target sum",
    "88-diy longest consecutive sequence",
    "89-project description for stock scraper",
    "90-feature 1 traversing dom tree",
    "91-feature 2 locating stock data",
    "92-feature 3 traversing dom tree ii",
    "93-feature 4 maximum profit",
    "94-what did we learn",
    "95-diy binary tree level order traversal",
    "96-diy lowest common ancestor of a binary tree",
    "97-diy lowest common ancestor of a binary tree iii",
    "98-diy populating next right pointers in each node",
    "99-diy populating next right pointers in each node ii",
    "100-diy maximum subarray",
    "101-diy best time to buy and sell stock",
    "102-project description for uber",
    "103-feature 1 select closest drivers",
    "104-feature 2 path cost",
    "105-feature 3 plot and select path",
    "106-feature 4 fare in words",
    "107-feature 5 uber pool",
    "108-feature 6 longest route",
    "109-feature 7 highest rank",
    "110-feature 8 optimal path",
    "111-what did we learn",
    "112-diy k closest points to origin",
    "113-diy trapping rainwater",
    "114-diy evaluate division",
    "115-diy integer to english words",
    "116-diy random pick with weight",
    "117-diy diameter of binary tree",
    "118-diy kth largest element in an array",
    "119-diy minimum path sum",
    "120-project description for amazon",
    "121-feature 1 suggest items for free delivery",
    "122-feature 2 suggest items for special offer",
    "123-feature 3 upselling products",
    "124-feature 4 copy product data",
    "125-feature 5 order processing milestones",
    "126-feature 6 products frequently viewed together",
    "127-feature 7 optimize delivery cost",
    "128-feature 8 merge recommendations",
    "129-feature 9 products in price range",
    "130-feature 10 calculate the total cost of the shopping cart items",
    "131-feature 11 ad serving",
    "132-feature 12 warehouse and drop points",
    "133-feature 13 time based item price store",
    "134-feature 14 find similar products",
    "135-what did we learn",
    "136-diy two sum",
    "137-diy three sum",
    "138-diy 3sum closest",
    "139-diy insert delete and getrandom in o 1",
    "140-diy insert delete getrandom o 1 duplicates allowed",
    "141-diy copy list with random pointer",
    "142-diy find first and last position of an element in sorted array",
    "143-diy find all anagrams in a string",
    "144-diy random pick index",
    "145-diy continuous subarray sum",
    "146-diy accounts merge",
    "147-diy range sum of bst",
    "148-diy basic calculator ii",
    "149-diy basic calculator iii",
    "150-diy read n characters given read4 ii call multiple times",
    "151-diy walls and gates",
    "152-diy time based key value store",
    "153-diy intersection of two arrays",
    "154-project description for zoom",
    "155-feature 1 display meeting lobby",
    "156-feature 2 serialize and deserialize participant data",
    "157-feature 3 meeting activity",
    "158-feature 4 validate sorted participants data",
    "159-feature 5 auto rotate in mobile devices",
    "160-what did we learn",
    "161-diy binary search tree iterator",
    "162-diy serialize and deserialize binary tree",
    "163-diy jump game iv",
    "164-diy validate the binary search tree",
    "165-diy rotate image",
    "166-project description for plagiarism checker",
    "167-feature 1 possible matches",
    "168-feature 2 return match",
    "169-what did we learn",
    "170-diy number of matching subsequences",
    "171-diy minimum window subsequence",
    "172-project description for network",
    "173-feature 1 total time",
    "174-feature 2 ttl expiry",
    "175-feature 3 minimum hops",
    "176-feature 4 maximum routers",
    "177-feature 5 update vlan id",
    "178-feature 6 transmission error",
    "179-feature 7 divide files over the network",
    "180-feature 8 maximum clock skew",
    "181-feature 9 update configuration",
    "182-feature 10 minimum variation",
    "183-feature 11 weighted exponential back off",
    "184-feature 12 peak signal strength",
    "185-what did we learn",
    "186-diy time needed to inform all employees",
    "187-diy all nodes distance k in binary tree",
    "188-diy jump game ii",
    "189-diy longest increasing path in a matrix",
    "190-diy flood fill",
    "191-diy valid palindrome ii",
    "192-diy partition labels",
    "193-diy maximum difference between node and ancestor",
    "194-diy rotting oranges",
    "195-diy longest subarray with absolute diff less than equal to limit",
    "196-diy add two numbers",
    "197-diy add two numbers ii",
    "198-diy find peak element",
    "199-project description for cyber security",
    "200-feature 1 validate packet structure",
    "201-feature 2 verify message integrity",
    "202-feature 3 find dictionary",
    "203-feature 4 ways to decode message",
    "204-feature 5 eligible candidates",
    "205-what did we learn",
    "206-diy utf 8 validation",
    "207-diy verifying an alien dictionary",
    "208-diy alien dictionary",
    "209-diy decode ways",
    "210-diy find k closest elements",
    "211-project description for operating system",
    "212-feature 1 allocate space",
    "213-feature 2 resume process",
    "214-feature 3 schedule processes",
    "215-feature 4 compress file",
    "216-feature 5 recover files",
    "217-feature 6 file management system",
    "218-feature 7 serialize and deserialize file system",
    "219-feature 8 compress file ii",
    "220-feature 9 file search",
    "221-feature 10 decode a message",
    "222-feature 11 directory iterator",
    "223-feature 12 priority validation",
    "224-feature 13 reverse commands",
    "225-feature 14 releasing process lock",
    "226-feature 15 queue reconstruction by priority",
    "227-what did we learn",
    "228-diy subarray sum equals k",
    "229-diy missing element in a sorted array",
    "230-diy course schedule",
    "231-diy course schedule ii",
    "232-diy sequence reconstruction",
    "233-diy concatenated words",
    "234-diy minimum remove to make valid parentheses",
    "235-diy design add and search words data structure",
    "236-diy serialize and deserialize n ary tree",
    "237-diy string compression",
    "238-diy regular expression matching",
    "239-diy wildcard matching",
    "240-diy 24 game",
    "241-diy flatten nested list iterator",
    "242-diy frog jump",
    "243-diy queue reconstruction by height",
    "244-diy reverse words in a string",
    "245-diy single element in a sorted array",
    "246-project description for language compiler",
    "247-feature 1 remove comments",
    "248-feature 2 evaluate the arithmetic expression",
    "249-feature 3 loop unrolling",
    "250-feature 4 optimization by replacement",
    "251-feature 5 compilation step failure",
    "252-feature 6 most common token",
    "253-feature 7 exponentiation for mobile devices",
    "254-feature 8 divide in power save mode",
    "255-feature 9 validate program brackets",
    "256-what did we learn",
    "257-diy count a word in the comments",
    "258-diy basic calculator",
    "259-diy decoding a string",
    "260-diy find and replace in a string",
    "261-diy first bad version",
    "262-diy nested list weight sum",
    "263-diy most common word",
    "264-diy pow x n",
    "265-diy divide two integers",
    "266-diy valid parentheses",
    "267-diy valid parenthesis string",
    "268-project description for boggle",
    "269-feature 1 search for a single word in the boggle grid",
    "270-feature 2 search for maximum number of words in the boggle grid",
    "271-what did we learn",
    "272-diy word search i",
    "273-diy word search ii",
    "274-project description for scrabble",
    "275-feature 1 minimum moves",
    "276-feature 2 possible results",
    "277-what did we learn",
    "278-diy word ladder i",
    "279-diy word ladder ii",
    "280-project description for game",
    "281-feature 1 hand of straights",
    "282-feature 2 maximum points you can obtain from cards",
    "283-feature 3 balloon splash",
    "284-what did we learn",
    "285-diy divide array in sets of k consecutive numbers",
    "286-diy find maximum sum from either end of an array",
    "287-diy remove all adjacent duplicates in string",
    "288-diy remove all adjacent duplicates in string ii",
    "289-project description for stocks",
    "290-feature 1 validate price",
    "291-feature 2 settling period",
    "292-feature 3 goals fulfilled",
    "293-feature 4 milestone reached",
    "294-feature 5 top brokers",
    "295-feature 6 assign transactions",
    "296-feature 7 process transactions",
    "297-feature 8 find intervals",
    "298-what did we learn",
    "299-diy valid number",
    "300-diy task scheduler",
    "301-diy split array into consecutive subsequences",
    "302-diy searching a 2d matrix",
    "303-diy top k frequent elements",
    "304-diy reverse nodes in k group",
    "305-diy reverse linked list ii",
    "306-diy string to integer atoi",
    "307-diy daily temperatures",
    "308-project description for computational biology",
    "309-feature 1 mutate dna",
    "310-feature 2 detect virus",
    "311-feature 3 locate protein",
    "312-feature 4 identifying proteins",
    "313-feature 5 mutating a virus",
    "314-feature 6 identify a species",
    "315-feature 7 detecting a protein",
    "316-feature 8 similarity measure between dna samples",
    "317-feature 9 kth missing gene",
    "318-what did we learn",
    "319-diy string transforms into another string",
    "320-diy longest substring with at most k distinct characters",
    "321-diy longest palindromic substring",
    "322-diy valid palindrome",
    "323-diy next permutation",
    "324-diy longest substring without repeating characters",
    "325-diy palindrome permutation",
    "326-diy palindromic substrings",
    "327-diy edit distance",
    "328-diy kth missing positive number",
    "329-project description for cellular operator",
    "330-feature 1 determine location",
    "331-feature 2 low coverage area",
    "332-feature 3 power up the station",
    "333-feature 4 query peak users",
    "334-feature 5 maximum contiguous area",
    "335-feature 6 densest deployment",
    "336-feature 7 maximum users",
    "337-feature 8 maximum signal strength",
    "338-what did we learn",
    "339-diy search a 2d matrix ii",
    "340-diy largest rectangle in histogram",
    "341-diy maximal rectangle",
    "342-diy open lock",
    "343-diy range sum query 2d immutable",
    "344-diy minimum area rectangle",
    "345-diy sliding window maximum",
    "346-diy max area of an island",
    "347-diy max consecutive ones iii",
    "348-diy shortest bridge",
    "349-project description for twitter",
    "350-feature 1 add likes",
    "351-feature 2 merge tweets in twitter feed",
    "352-feature 3 identify peak interaction times",
    "353-feature 4 split users into two groups",
    "354-feature 5 drawing a global profile of viral tweets",
    "355-feature 6 incoming tweets predictor",
    "356-feature 7 trending hashtags",
    "357-what did we learn",
    "358-diy add binary",
    "359-diy multiply strings",
    "360-diy merge sorted arrays",
    "361-diy maximum sum of three non overlapping arrays",
    "362-diy is graph bipartite",
    "363-diy the skyline problem",
    "364-diy moving average from a data stream",
    "365-diy find duplicate files in system",
    "366-invert binary tree",
    "367-flip equivalent binary trees",
    "368-binary tree maximum path sum",
    "369-binary tree zigzag level order traversal",
    "370-binary tree right side view",
    "371-binary tree vertical order traversal",
    "372-boundary of binary tree",
    "373-flatten binary tree to linked list",
    "374-minimum knight moves",
    "375-sparse matrix multiplication",
    "376-design in memory file system",
    "377-spiral matrix",
    "378-design tic tac toe",
    "379-the maze",
    "380-restore ip addresses",
    "381-reconstruct itinerary",
    "382-text justification",
    "383-gas station",
    "384-strong password checker",
    "385-sudoku solver",
    "386-pacific atlantic water flow",
    "387-angle between the hands of a clock",
    "388-where to go from here"
  ],
  "repo_name": "sardonic-tiger"
}
